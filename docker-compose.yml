version: '3.5'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - app-network

  auth_service:
    container_name: auth_service
    build:
      context: ./authorization
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: root
      POSTGRES_PASSWORD: megorka
      POSTGRES_DB: yandex
    networks:
      - app-network

  auth_service2:
    container_name: auth_service2
    build:
      context: ./authorization
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: root
      POSTGRES_PASSWORD: megorka
      POSTGRES_DB: yandex
    networks:
      - app-network

  user_service:
    container_name: user_service
    build:
      context: ./user_service
      dockerfile: Dockerfile
    environment:
      HTTP_PORT: 8080
    networks:
      - app-network

  user_service2:
    container_name: user_service2
    build:
      context: ./user_service
      dockerfile: Dockerfile
    environment:
      HTTP_PORT: 8080
    networks:
      - app-network

  post_service:
    container_name: post_service
    build:
      context: ./post_service
      dockerfile: Dockerfile
    environment:
      HTTP_PORT: 8080
    networks:
      - app-network

  post_service2:
    container_name: post_service2
    build:
      context: ./post_service
      dockerfile: Dockerfile
    environment:
      HTTP_PORT: 8080
    networks:
      - app-network

  chat_service:
    container_name: chat_service
    build:
      context: ./chat_service
      dockerfile: Dockerfile
    environment:
      HTTP_PORT: 8080
    networks:
      - app-network

  chat_service2:
    container_name: chat_service2
    build:
      context: ./chat_service
      dockerfile: Dockerfile
    environment:
      HTTP_PORT: 8080
    networks:
      - app-network

  postgres:
    container_name: yandex
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: megorka
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres: